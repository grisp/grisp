diff --git a/erts/emulator/sys/unix/sys.c b/erts/emulator/sys/unix/sys.c
index ae69e5e..f0f9577 100644
--- a/erts/emulator/sys/unix/sys.c
+++ b/erts/emulator/sys/unix/sys.c
@@ -27,6 +27,11 @@
 #define _XOPEN_SOURCE
 #endif

+#ifdef __rtems__
+#include <rtems/malloc.h>
+#include <inttypes.h>
+#endif
+
 #include <sys/times.h>    /* ! */
 #include <time.h>
 #include <signal.h>
@@ -822,6 +827,24 @@ int sys_get_hostname(char *buf, size_t size)
 void sys_init_io(void) { }
 void erts_sys_alloc_init(void) { }

+#ifdef __rtems__
+static void print_rtems_memory_info(void) {
+  Heap_Information_block info;
+  malloc_info(&info);
+  erts_printf("RTEMS HEAP INFO:\n"
+         "  Number of used blocks: %8" PRIuPTR "\n"
+         "  Largest used block:    %8" PRIuPTR "\n"
+         "  Total bytes used:      %8" PRIuPTR "\n"
+         "  Number of free blocks: %8" PRIuPTR "\n"
+         "  Largest free block:    %8" PRIuPTR "\n"
+         "  Total bytes free:      %8" PRIuPTR "\n",
+         info.Used.number, info.Used.largest, info.Used.total,
+         info.Free.number, info.Free.largest, info.Free.total);
+}
+#else
+static void print_rtems_memory_info(void) {}
+#endif
+
 extern const char pre_loaded_code[];
 extern Preload pre_loaded[];

@@ -873,11 +896,21 @@ void *erts_sys_aligned_realloc(UWord alignment, void *ptr, UWord size, UWord old

 void *erts_sys_alloc(ErtsAlcType_t t, void *x, Uint sz)
 {
-    void *res = malloc((size_t) sz);
+    // void *res = malloc((size_t) sz);
+
+    void *res;
+    if (sz == 0)
+        res = malloc((size_t) 1);
+    else
+        res = malloc((size_t) sz);
 #if HAVE_ERTS_MSEG
     if (!res) {
-  erts_mseg_clear_cache();
-  return malloc((size_t) sz);
+        erts_mseg_clear_cache();
+        res = malloc((size_t) sz);
+        if (!res) {
+            print_rtems_memory_info();
+            return res;
+        }
     }
 #endif
     return res;
@@ -888,8 +921,12 @@ void *erts_sys_realloc(ErtsAlcType_t t, void *x, void *p, Uint sz)
     void *res = realloc(p, (size_t) sz);
 #if HAVE_ERTS_MSEG
     if (!res) {
-  erts_mseg_clear_cache();
-  return realloc(p, (size_t) sz);
+        erts_mseg_clear_cache();
+        res = realloc(p, (size_t) sz);
+        if (!res) {
+            print_rtems_memory_info();
+            return res;
+        }
     }
 #endif
     return res;
