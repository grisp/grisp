name: Check OTP Release

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 * * * *' # At the beginning of every hour

jobs:
  check-otp:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest version and validate
        run: |
          release_json=$(curl -sL -H "Accept: application/vnd.github+json" https://api.github.com/repos/erlang/otp/releases/latest | tr -d '\000-\037')
          tag=$(printf '%s' "$release_json" | jq -r '.tag_name')
          
          if [[ "$tag" != OTP-* ]]; then
            echo "A non-release tag was detected. Stopping execution"
            exit 1
          fi

          echo "$release_json" | jq -r '.assets[].name' | grep -qi 'README' 
          if [[ $? -ne 0 ]]; then
            echo "No README found in release assets."
            exit 1
          fi

          echo "$tag" > last_seen_ver.txt
          echo "LAST_OTP=$(cat last_seen_ver.txt)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        id: version-cache
        env:
          cache-name: cached-version
        with:
          path: last_cached_ver.txt
          key: ${{env.LAST_OTP}}
      - name: Compare with Latest Release Number
        id: compare-vsn
        continue-on-error: true
        run: |
          diff last_cached_ver.txt last_seen_ver.txt
      - name: Update cached Version
        run: |
          cp last_seen_ver.txt last_cached_ver.txt
      - name: Trigger OTP package build
        if: ${{ steps.compare-vsn.outcome == 'failure' }}
        run: |
          OTP=$(cat last_seen_ver.txt | awk -F'-' '{print $2}')
          echo $OTP
          curl -L -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.everest-preview+json" \
            https://api.github.com/repos/grisp/grisp/dispatches \
            -d "{\"event_type\":\"new-otp-release\",\"client_payload\":{\"otp\":\"\\\\\\\"${OTP}\\\\\\\"\",\"unit\":false,\"integration\":true}}"
